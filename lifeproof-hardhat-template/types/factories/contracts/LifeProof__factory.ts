/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LifeProof, LifeProofInterface } from "../../contracts/LifeProof";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "LifeEventCommented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "LifeEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "liked",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCount",
        type: "uint256",
      },
    ],
    name: "LifeEventLiked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "LifeEventPublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
    ],
    name: "LifeEventVisibilityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "addComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "k",
        type: "uint8",
      },
    ],
    name: "addToMood",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "allowTransientMood",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getComments",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LifeProof.CommentInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPublic",
            type: "bool",
          },
        ],
        internalType: "struct LifeProof.LifeEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMoodHandle",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEventIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPublic",
            type: "bool",
          },
        ],
        internalType: "struct LifeProof.LifeEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getPublicFeed",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasLiked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lifeEvents",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "doLike",
        type: "bool",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "likeCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
      {
        internalType: "externalEuint8",
        name: "moodExternal",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mintLifeEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPublic",
        type: "bool",
      },
    ],
    name: "toggleVisibility",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5033604051806040016040528060098152602001682634b332a83937b7b360b91b815250604051806040016040528060048152602001634c49464560e01b815250815f908161005e919061030d565b50600161006b828261030d565b5050506001600160a01b03811661009b57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a481610224565b5061021f610143604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6103c7565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061029d57607f821691505b6020821081036102bb57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561030857805f5260205f20601f840160051c810160208510156102e65750805b601f840160051c820191505b81811015610305575f81556001016102f2565b50505b505050565b81516001600160401b0381111561032657610326610275565b61033a816103348454610289565b846102c1565b6020601f82116001811461036c575f83156103555750848201515b5f19600385901b1c1916600184901b178455610305565b5f84815260208120601f198516915b8281101561039b578785015182556020948501946001909201910161037b565b50848210156103b857868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61340e806103d45f395ff3fe608060405234801561000f575f5ffd5b5060043610610201575f3560e01c8063715018a611610123578063a22cb465116100b8578063c87b56dd11610088578063e985e9c51161006e578063e985e9c5146104b2578063ee7a62bd146104ed578063f2fde38b14610500575f5ffd5b8063c87b56dd14610497578063da1f12ab146104aa575f5ffd5b8063a22cb4651461044b578063aa7e56831461045e578063b6ec73d214610471578063b88d4fde14610484575f5ffd5b80638c2229a5116100f35780638c2229a5146103e75780638da5cb5b146103fa5780638fb7092c1461040b57806395d89b4114610443575f5ffd5b8063715018a61461039e57806375794a3c146103a6578063854e85c6146103af57806388a57e70146103d4575f5ffd5b806342842e0e116101995780636352211e116101695780636352211e146103385780636818ba1d1461034b5780636d1884e01461036b57806370a082311461038b575f5ffd5b806342842e0e146102ea57806343ce00d6146102fd5780634fcca7c51461031257806360c40a3b14610325575f5ffd5b806313ee92aa116101d457806313ee92aa146102825780631a9a6ef0146102a357806323b872dd146102c25780633548124b146102d5575f5ffd5b806301ffc9a71461020557806306fdde031461022d578063081812fc14610242578063095ea7b31461026d575b5f5ffd5b610218610213366004612a2f565b610513565b60405190151581526020015b60405180910390f35b610235610564565b6040516102249190612a78565b610255610250366004612a8a565b6105f3565b6040516001600160a01b039091168152602001610224565b61028061027b366004612abc565b61061a565b005b610295610290366004612a8a565b610629565b604051908152602001610224565b6102956102b1366004612a8a565b600e6020525f908152604090205481565b6102806102d0366004612ae4565b610645565b6102dd6106d3565b6040516102249190612ba2565b6102806102f8366004612ae4565b610a55565b610305610a74565b6040516102249190612c05565b610280610320366004612c56565b610b3a565b610295610333366004612d6e565b610c2e565b610255610346366004612a8a565b610e8b565b61035e610359366004612e70565b610e95565b6040516102249190612e99565b61037e610379366004612a8a565b6110db565b6040516102249190612f1b565b610295610399366004612f2d565b61138b565b6102806113d0565b61029560075481565b6103c26103bd366004612a8a565b6113e3565b60405161022496959493929190612f46565b6102806103e2366004612fad565b611632565b6102806103f5366004612fce565b611653565b6006546001600160a01b0316610255565b610218610419366004612fad565b5f918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6102356116bd565b610280610459366004613001565b6116cc565b61028061046c366004613029565b6116d7565b61030561047f366004613071565b61187d565b610280610492366004613091565b6119c6565b6102356104a5366004612a8a565b6119de565b612711610295565b6102186104c0366004613108565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6102806104fb366004612c56565b611a4e565b61028061050e366004612f2d565b611c51565b5f6001600160e01b031982166380ac58cd60e01b148061054357506001600160e01b03198216635b5e139f60e01b145b8061055e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461057290613130565b80601f016020809104026020016040519081016040528092919081815260200182805461059e90613130565b80156105e95780601f106105c0576101008083540402835291602001916105e9565b820191905f5260205f20905b8154815290600101906020018083116105cc57829003601f168201915b5050505050905090565b5f6105fd82611c8e565b505f828152600460205260409020546001600160a01b031661055e565b610625828233611cc6565b5050565b5f61063382611cd3565b505f9081526009602052604090205490565b6001600160a01b03821661067357604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61067f838333611d38565b9050836001600160a01b0316816001600160a01b0316146106cd576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161066a565b50505050565b60605f6106df3361138b565b90505f8167ffffffffffffffff8111156106fb576106fb612c80565b60405190808252806020026020018201604052801561076557816020015b6107526040518060c00160405280606081526020016060815260200160608152602001606081526020015f81526020015f151581525090565b8152602001906001900390816107195790505b506007549091505f9060015b818111610a4b575f818152600a6020526040902054336001600160a01b0390911603610a39575f8181526008602052604090819020815160c081019092528054829082906107be90613130565b80601f01602080910402602001604051908101604052809291908181526020018280546107ea90613130565b80156108355780601f1061080c57610100808354040283529160200191610835565b820191905f5260205f20905b81548152906001019060200180831161081857829003601f168201915b5050505050815260200160018201805461084e90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461087a90613130565b80156108c55780601f1061089c576101008083540402835291602001916108c5565b820191905f5260205f20905b8154815290600101906020018083116108a857829003601f168201915b505050505081526020016002820180546108de90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461090a90613130565b80156109555780601f1061092c57610100808354040283529160200191610955565b820191905f5260205f20905b81548152906001019060200180831161093857829003601f168201915b5050505050815260200160038201805461096e90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461099a90613130565b80156109e55780601f106109bc576101008083540402835291602001916109e5565b820191905f5260205f20905b8154815290600101906020018083116109c857829003601f168201915b50505091835250506004820154602082015260059091015460ff1615156040909101528484610a138161317c565b955081518110610a2557610a25613194565b602002602001018190525084830315610a4b575b80610a438161317c565b915050610771565b5091949350505050565b610a6f83838360405180602001604052805f8152506119c6565b505050565b60605f610a803361138b565b90505f8167ffffffffffffffff811115610a9c57610a9c612c80565b604051908082528060200260200182016040528015610ac5578160200160208202803683370190505b506007549091505f9060015b818111610a4b575f818152600a6020526040902054336001600160a01b0390911603610b2857808484610b038161317c565b955081518110610b1557610b15613194565b6020908102919091010152828514610a4b575b80610b328161317c565b915050610ad1565b610b4382611cd3565b5f82815260086020908152604091829020600501805460ff1916841515908117909155915191825283917f71aeb1324b04a6faebaa24aec26b26ed117383d2fda08643da2adc5c45f577b0910160405180910390a2808015610bb357505f828152600c602052604090205460ff16155b15610625575f828152600c6020526040808220805460ff19166001908117909155600b8054918201815583527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9018490555183917fbf883772648a4c30e472f1db7c81acf2d002a47811fd5f2a3225bad854e80fdf91a25050565b5f60075f8154610c3d9061317c565b91829055509050610c4e3382611e2a565b5f818152600a6020908152604080832080546001600160a01b03191633179055805160c0810182528c81528083018c90528082018b9052606081018a905242608082015288151560a0820152848452600890925290912081518190610cb390826131ec565b5060208201516001820190610cc890826131ec565b5060408201516002820190610cdd90826131ec565b5060608201516003820190610cf290826131ec565b506080820151600482015560a0909101516005909101805460ff1916911515919091179055604080516020601f85018190048102820181019092528381525f91610d5791879187908790819084018382808284375f92019190915250611e4392505050565b90505f610d646064611e50565b90505f610d705f611e50565b90505f610d7d8484611e5f565b9050610d898183611e8d565b5f868152600960205260409020819055610da290611ebb565b505f85815260096020526040902054610dbb9033611eca565b50888015610dd757505f858152600c602052604090205460ff16155b15610e4f575f858152600c6020526040808220805460ff19166001908117909155600b8054918201815583527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9018790555186917fbf883772648a4c30e472f1db7c81acf2d002a47811fd5f2a3225bad854e80fdf91a25b604051859033907f6cda10cf8cbba6f1fdb4f651cc470c3aaf79a591daa65174db18a88a1b8f8b0b905f90a35050505098975050505050505050565b5f61055e82611c8e565b5f838152600f60205260409020805460609190808510610f0c57604080515f8082526020820190925290610f02565b610eef60405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b815260200190600190039081610ec45790505b50925050506110d4565b5f610f1786836132a7565b90505f858210610f275785610f29565b815b90505f8167ffffffffffffffff811115610f4557610f45612c80565b604051908082528060200260200182016040528015610fa157816020015b610f8e60405180606001604052805f6001600160a01b03168152602001606081526020015f81525090565b815260200190600190039081610f635790505b5090505f5b828110156110cc5785610fb9828b6132ba565b610fc46001886132a7565b610fce91906132a7565b81548110610fde57610fde613194565b5f918252602091829020604080516060810190915260039092020180546001600160a01b03168252600181018054929391929184019161101d90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461104990613130565b80156110945780601f1061106b57610100808354040283529160200191611094565b820191905f5260205f20905b81548152906001019060200180831161107757829003601f168201915b505050505081526020016002820154815250508282815181106110b9576110b9613194565b6020908102919091010152600101610fa6565b509450505050505b9392505050565b6111146040518060c00160405280606081526020016060815260200160608152602001606081526020015f81526020015f151581525090565b5f8281526008602052604090819020815160c0810190925280548290829061113b90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461116790613130565b80156111b25780601f10611189576101008083540402835291602001916111b2565b820191905f5260205f20905b81548152906001019060200180831161119557829003601f168201915b505050505081526020016001820180546111cb90613130565b80601f01602080910402602001604051908101604052809291908181526020018280546111f790613130565b80156112425780601f1061121957610100808354040283529160200191611242565b820191905f5260205f20905b81548152906001019060200180831161122557829003601f168201915b5050505050815260200160028201805461125b90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461128790613130565b80156112d25780601f106112a9576101008083540402835291602001916112d2565b820191905f5260205f20905b8154815290600101906020018083116112b557829003601f168201915b505050505081526020016003820180546112eb90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461131790613130565b80156113625780601f1061133957610100808354040283529160200191611362565b820191905f5260205f20905b81548152906001019060200180831161134557829003601f168201915b50505091835250506004820154602082015260059091015460ff16151560409091015292915050565b5f6001600160a01b0382166113b5576040516322718ad960e21b81525f600482015260240161066a565b506001600160a01b03165f9081526003602052604090205490565b6113d8611edc565b6113e15f611f09565b565b60086020525f90815260409020805481906113fd90613130565b80601f016020809104026020016040519081016040528092919081815260200182805461142990613130565b80156114745780601f1061144b57610100808354040283529160200191611474565b820191905f5260205f20905b81548152906001019060200180831161145757829003601f168201915b50505050509080600101805461148990613130565b80601f01602080910402602001604051908101604052809291908181526020018280546114b590613130565b80156115005780601f106114d757610100808354040283529160200191611500565b820191905f5260205f20905b8154815290600101906020018083116114e357829003601f168201915b50505050509080600201805461151590613130565b80601f016020809104026020016040519081016040528092919081815260200182805461154190613130565b801561158c5780601f106115635761010080835404028352916020019161158c565b820191905f5260205f20905b81548152906001019060200180831161156f57829003601f168201915b5050505050908060030180546115a190613130565b80601f01602080910402602001604051908101604052809291908181526020018280546115cd90613130565b80156116185780601f106115ef57610100808354040283529160200191611618565b820191905f5260205f20905b8154815290600101906020018083116115fb57829003601f168201915b50505050600483015460059093015491929160ff16905086565b61163b82611cd3565b5f82815260096020526040902054610a6f9082611f5a565b61165c82611cd3565b5f828152600960205260409020546116748183611f65565b9050611689816116846064611e50565b611e5f565b5f84815260096020526040902081905590506116a481611ebb565b505f838152600960205260409020546106cd9033611eca565b60606001805461057290613130565b610625338383611f86565b5f831180156116e857506007548311155b6117265760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161066a565b5f8381526008602052604090206005015460ff166117735760405162461bcd60e51b815260206004820152600a6024820152694e6f74207075626c696360b01b604482015260640161066a565b600f5f8481526020019081526020015f206040518060600160405280336001600160a01b0316815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509385525050426020938401525083546001808201865594825290829020835160039092020180546001600160a01b0319166001600160a01b0390921691909117815590820151919290919082019061182790826131ec565b50604082015181600201555050336001600160a01b0316837ff69a3393a07791a670656eb567e64bb6ea1cf721376cb78dc585de3da65ad5cf84846040516118709291906132cd565b60405180910390a3505050565b600b5460609080841061189f575050604080515f81526020810190915261055e565b5f6118aa85836132a7565b90505f8482106118ba57846118bc565b815b90505f8167ffffffffffffffff8111156118d8576118d8612c80565b604051908082528060200260200182016040528015611901578160200160208202803683370190505b5090505f5b828110156119bb575f611919828a6132ba565b6119246001886132a7565b61192e91906132a7565b90505f600b828154811061194457611944613194565b5f918252602080832090910154808352600890915260409091206005015490915060ff1615611991578084848151811061198057611980613194565b6020026020010181815250506119b1565b5f8484815181106119a4576119a4613194565b6020026020010181815250505b5050600101611906565b509695505050505050565b6119d1848484610645565b6106cd338585858561201c565b60606119e982611c8e565b505f6119ff60408051602081019091525f815290565b90505f815111611a1d5760405180602001604052805f8152506110d4565b80611a2784612144565b604051602001611a38929190613312565b6040516020818303038152906040529392505050565b5f82118015611a5f57506007548211155b611a9d5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161066a565b5f8281526008602052604090206005015460ff16611aea5760405162461bcd60e51b815260206004820152600a6024820152694e6f74207075626c696360b01b604482015260640161066a565b5f828152600d6020908152604080832033845290915290205460ff16818015611b11575080155b15611ba4575f838152600d602090815260408083203384528252808320805460ff19166001908117909155868452600e9092528220805491929091611b579084906132ba565b90915550505f838152600e60209081526040918290205482516001815291820152339185917f94b5a42ddc2d1468faa9fea619323044bdd08ad344deaf65944acf5fe398ff0d9101611870565b81158015611baf5750805b15610a6f575f838152600d602090815260408083203384528252808320805460ff19169055858352600e90915290205415611c08575f838152600e60205260408120805460019290611c029084906132a7565b90915550505b5f838152600e6020908152604080832054815193845291830191909152339185917f94b5a42ddc2d1468faa9fea619323044bdd08ad344deaf65944acf5fe398ff0d9101611870565b611c59611edc565b6001600160a01b038116611c8257604051631e4fbdf760e01b81525f600482015260240161066a565b611c8b81611f09565b50565b5f818152600260205260408120546001600160a01b03168061055e57604051637e27328960e01b81526004810184905260240161066a565b610a6f83838360016121e1565b5f818152600a60205260409020546001600160a01b03163314611c8b5760405162461bcd60e51b815260206004820152600f60248201527f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000604482015260640161066a565b5f828152600260205260408120546001600160a01b0390811690831615611d6457611d64818486612303565b6001600160a01b03811615611d9e57611d7f5f855f5f6121e1565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615611dcc576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b610625828260405180602001604052805f815250612367565b5f6110d48383600261237e565b5f61055e8260ff16600261249e565b5f82611e7157611e6e5f611e50565b92505b81611e8257611e7f5f611e50565b91505b6110d483835f61255b565b5f82611e9f57611e9c5f611e50565b92505b81611eb057611ead5f611e50565b91505b6110d483835f61263e565b5f611ec682306126db565b5090565b5f611ed583836126db565b5090919050565b6006546001600160a01b031633146113e15760405163118cdaa760e01b815233600482015260240161066a565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f611ed58383612762565b5f82611f7757611f745f611e50565b92505b6110d48360ff841660016127bb565b6001600160a01b038216611fb857604051630b61174360e31b81526001600160a01b038316600482015260240161066a565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611870565b6001600160a01b0383163b1561213d57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061205e908890889087908790600401613326565b6020604051808303815f875af1925050508015612098575060408051601f3d908101601f191682019092526120959181019061335c565b60015b6120ff573d8080156120c5576040519150601f19603f3d011682016040523d82523d5f602084013e6120ca565b606091505b5080515f036120f757604051633250574960e11b81526001600160a01b038516600482015260240161066a565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461213b57604051633250574960e11b81526001600160a01b038516600482015260240161066a565b505b5050505050565b60605f61215083612858565b60010190505f8167ffffffffffffffff81111561216f5761216f612c80565b6040519080825280601f01601f191660200182016040528015612199576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846121a357509392505050565b80806121f557506001600160a01b03821615155b156122d4575f61220484611c8e565b90506001600160a01b038316158015906122305750826001600160a01b0316816001600160a01b031614155b801561226157506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b1561228a5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161066a565b81156122d25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61230e838383612939565b610a6f576001600160a01b03831661233c57604051637e27328960e01b81526004810182905260240161066a565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161066a565b61237183836129b9565b610a6f335f85858561201c565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b906123f7908890339089908990600401613397565b6020604051808303815f875af1158015612413573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061243791906133d6565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015612480575f5ffd5b505af1158015612492573d5f5f3e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb9061251390879087906004016133ed565b6020604051808303815f875af115801561252f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061255391906133d6565b949350505050565b5f5f821561256e5750600160f81b612571565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516304559f7160e01b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906304559f71906064015b6020604051808303815f875af1158015612610573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061263491906133d6565b9695505050505050565b5f5f82156126515750600160f81b612654565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630d8c635960e21b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906336318d64906064016125f4565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015612747575f5ffd5b505af1158015612759573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec90604401612730565b5f5f82156127ce5750600160f81b6127d1565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f38906064016125f4565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106128a0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106128cc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106128ea57662386f26fc10000830492506010015b6305f5e1008310612902576305f5e100830492506008015b612710831061291657612710830492506004015b60648310612928576064830492506002015b600a831061055e5760010192915050565b5f6001600160a01b038316158015906125535750826001600160a01b0316846001600160a01b0316148061299157506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b806125535750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b0382166129e257604051633250574960e11b81525f600482015260240161066a565b5f6129ee83835f611d38565b90506001600160a01b03811615610a6f576040516339e3563760e11b81525f600482015260240161066a565b6001600160e01b031981168114611c8b575f5ffd5b5f60208284031215612a3f575f5ffd5b81356110d481612a1a565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6110d46020830184612a4a565b5f60208284031215612a9a575f5ffd5b5035919050565b80356001600160a01b0381168114612ab7575f5ffd5b919050565b5f5f60408385031215612acd575f5ffd5b612ad683612aa1565b946020939093013593505050565b5f5f5f60608486031215612af6575f5ffd5b612aff84612aa1565b9250612b0d60208501612aa1565b929592945050506040919091013590565b5f815160c08452612b3260c0850182612a4a565b905060208301518482036020860152612b4b8282612a4a565b91505060408301518482036040860152612b658282612a4a565b91505060608301518482036060860152612b7f8282612a4a565b9150506080830151608085015260a0830151151560a08501528091505092915050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015612bf957603f19878603018452612be4858351612b1e565b94506020938401939190910190600101612bc8565b50929695505050505050565b602080825282518282018190525f918401906040840190835b81811015612c3c578351835260209384019390920191600101612c1e565b509095945050505050565b80358015158114612ab7575f5ffd5b5f5f60408385031215612c67575f5ffd5b82359150612c7760208401612c47565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f67ffffffffffffffff841115612cae57612cae612c80565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715612cdd57612cdd612c80565b604052838152905080828401851015612cf4575f5ffd5b838360208301375f60208583010152509392505050565b5f82601f830112612d1a575f5ffd5b6110d483833560208501612c94565b5f5f83601f840112612d39575f5ffd5b50813567ffffffffffffffff811115612d50575f5ffd5b602083019150836020828501011115612d67575f5ffd5b9250929050565b5f5f5f5f5f5f5f5f60e0898b031215612d85575f5ffd5b883567ffffffffffffffff811115612d9b575f5ffd5b612da78b828c01612d0b565b985050602089013567ffffffffffffffff811115612dc3575f5ffd5b612dcf8b828c01612d0b565b975050604089013567ffffffffffffffff811115612deb575f5ffd5b612df78b828c01612d0b565b965050606089013567ffffffffffffffff811115612e13575f5ffd5b612e1f8b828c01612d0b565b955050612e2e60808a01612c47565b935060a0890135925060c089013567ffffffffffffffff811115612e50575f5ffd5b612e5c8b828c01612d29565b999c989b5096995094979396929594505050565b5f5f5f60608486031215612e82575f5ffd5b505081359360208301359350604090920135919050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015612bf957603f1987860301845281516001600160a01b038151168652602081015160606020880152612ef86060880182612a4a565b604092830151979092019690965294506020938401939190910190600101612ebf565b602081525f6110d46020830184612b1e565b5f60208284031215612f3d575f5ffd5b6110d482612aa1565b60c081525f612f5860c0830189612a4a565b8281036020840152612f6a8189612a4a565b90508281036040840152612f7e8188612a4a565b90508281036060840152612f928187612a4a565b6080840195909552505090151560a090910152949350505050565b5f5f60408385031215612fbe575f5ffd5b82359150612c7760208401612aa1565b5f5f60408385031215612fdf575f5ffd5b82359150602083013560ff81168114612ff6575f5ffd5b809150509250929050565b5f5f60408385031215613012575f5ffd5b61301b83612aa1565b9150612c7760208401612c47565b5f5f5f6040848603121561303b575f5ffd5b83359250602084013567ffffffffffffffff811115613058575f5ffd5b61306486828701612d29565b9497909650939450505050565b5f5f60408385031215613082575f5ffd5b50508035926020909101359150565b5f5f5f5f608085870312156130a4575f5ffd5b6130ad85612aa1565b93506130bb60208601612aa1565b925060408501359150606085013567ffffffffffffffff8111156130dd575f5ffd5b8501601f810187136130ed575f5ffd5b6130fc87823560208401612c94565b91505092959194509250565b5f5f60408385031215613119575f5ffd5b61312283612aa1565b9150612c7760208401612aa1565b600181811c9082168061314457607f821691505b60208210810361316257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161318d5761318d613168565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b601f821115610a6f57805f5260205f20601f840160051c810160208510156131cd5750805b601f840160051c820191505b8181101561213d575f81556001016131d9565b815167ffffffffffffffff81111561320657613206612c80565b61321a816132148454613130565b846131a8565b6020601f82116001811461324c575f83156132355750848201515b5f19600385901b1c1916600184901b17845561213d565b5f84815260208120601f198516915b8281101561327b578785015182556020948501946001909201910161325b565b508482101561329857868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8181038181111561055e5761055e613168565b8082018082111561055e5761055e613168565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f81518060208401855e5f93019283525090919050565b5f61255361332083866132fb565b846132fb565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f6126346080830184612a4a565b5f6020828403121561336c575f5ffd5b81516110d481612a1a565b6054811061339357634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6133be6080830185612a4a565b90506133cd6060830184613377565b95945050505050565b5f602082840312156133e6575f5ffd5b5051919050565b828152604081016110d4602083018461337756fea164736f6c634300081b000a";

type LifeProofConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LifeProofConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LifeProof__factory extends ContractFactory {
  constructor(...args: LifeProofConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LifeProof & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LifeProof__factory {
    return super.connect(runner) as LifeProof__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LifeProofInterface {
    return new Interface(_abi) as LifeProofInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LifeProof {
    return new Contract(address, _abi, runner) as unknown as LifeProof;
  }
}
